<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zl.management.domain.Researchers">
	<insert id="add" parameterType="Researchers">
		insert into Researchers(name,
		englishName, staffNumber, sex, birth, researchUnit,
		researchDepartment, personnelUnits, finalDegree, finalEducation,
		politicalStatus, title, fixedDate, honoraryTitle, disciplines,
		statistics, firstDiscipline, secDiscipline, thirdDiscipline,
		relatedDisciplines, researchDirection, idCard, teacherCategory,
		tutorCategory, isExpert, appointmentDate, administrativeDuty, country,
		nation, address, postCode, homePhone, phone, email, officePhone,
		officeFax, personWeb, jobSituation, firstForeignLanguage,
		secForeignLanguage, firstForeignLanguageLev, secForeignLanguageLev,
		trainingSituation, academicPartTime, academicSpecialty,
		approvalStatus)values(#{name}, #{englishName}, #{staffNumber}, #{sex},
		#{birth}, #{researchUnit}, #{researchDepartment}, #{personnelUnits},
		#{finalDegree}, #{finalEducation}, #{politicalStatus}, #{title},
		#{fixedDate}, #{honoraryTitle}, #{disciplines}, #{statistics},
		#{firstDiscipline}, #{secDiscipline}, #{thirdDiscipline},
		#{relatedDisciplines}, #{researchDirection}, #{idCard},
		#{teacherCategory}, #{tutorCategory}, #{isExpert}, #{appointmentDate},
		#{administrativeDuty}, #{country}, #{nation}, #{address}, #{postCode},
		#{homePhone}, #{phone}, #{email}, #{officePhone}, #{officeFax},
		#{personWeb}, #{jobSituation}, #{firstForeignLanguage},
		#{secForeignLanguage}, #{firstForeignLanguageLev},
		#{secForeignLanguageLev}, #{trainingSituation}, #{academicPartTime},
		#{academicSpecialty}, #{approvalStatus})

	</insert>

	<update id="update" parameterType="Researchers">
		update Researchers set
		name=#{name}, englishName=#{englishName}, staffNumber=#{staffNumber},
		sex=#{sex}, birth=#{birth}, researchUnit=#{researchUnit},
		researchDepartment=#{researchDepartment},
		personnelUnits=#{personnelUnits}, finalDegree=#{finalDegree},
		finalEducation=#{finalEducation}, politicalStatus=#{politicalStatus},
		title=#{title}, fixedDate=#{fixedDate},
		honoraryTitle=#{honoraryTitle}, disciplines=#{disciplines},
		statistics=#{statistics}, firstDiscipline=#{firstDiscipline},
		secDiscipline=#{secDiscipline}, thirdDiscipline=#{thirdDiscipline},
		relatedDisciplines=#{relatedDisciplines},
		researchDirection=#{researchDirection}, idCard=#{idCard},
		teacherCategory=#{teacherCategory}, tutorCategory=#{tutorCategory},
		isExpert=#{isExpert}, appointmentDate=#{appointmentDate},
		administrativeDuty=#{administrativeDuty}, country=#{country},
		nation=#{nation}, address=#{address}, postCode=#{postCode},
		homePhone=#{homePhone}, phone=#{phone}, email=#{email},
		officePhone=#{officePhone}, officeFax=#{officeFax},
		personWeb=#{personWeb}, jobSituation=#{jobSituation},
		firstForeignLanguage=#{firstForeignLanguage},
		secForeignLanguage=#{secForeignLanguage},
		firstForeignLanguageLev=#{firstForeignLanguageLev},
		secForeignLanguageLev=#{secForeignLanguageLev},
		trainingSituation=#{trainingSituation},
		academicPartTime=#{academicPartTime},
		academicSpecialty=#{academicSpecialty},
		approvalStatus=#{approvalStatus}
		where id
		= #{id}
	</update>

	<delete id="delete" parameterType="int">
		delete from Researchers where
		id =
		#{id}
	</delete>

	<select id="load" parameterType="int" resultType="Researchers">
		select * from
		Researchers where id = #{id}
	</select>

	<select id="loadByName" parameterType="String" resultType="Researchers">
		select * from Researchers where name = #{name}
	</select>

	<select id="loadByStaffNum" parameterType="String" resultType="Researchers">
		select * from Researchers where staffNumber = #{staffNumber}
	</select>

	<select id="find" parameterType="Map" resultType="Researchers">
		select * from Researchers
		<where>
			<if test="name != null and name != '%%'">
				(name like #{name})
			</if>
			<if test="staffNumber != null and staffNumber != ''">
				(staffNumber = #{staffNumber})
			</if>
			<if test="sex != null and sex != ''">
				(sex = #{sex})
			</if>
			<if test="birth != null and birth != ''">
				(birth = #{birth})
			</if>
			<if test="finalDegree != null and finalDegree != ''">
				(finalDegree = #{finalDegree})
			</if>
			<if test="finalEducation != null and finalEducation != ''">
				(finalEducation = #{finalEducation})
			</if>
		</where>
		limit #{pageOffset}, #{pageSize}
	</select>

	<select id="find_count" parameterType="Map" resultType="int">
		select count(*) from Researchers
		<if test="name != null">
			where (name like #{name})
		</if>
	</select>

	<select id="list" parameterType="Map" resultType="Researchers">
		select * from Researchers
		<where>
			<if test="name != null">
				(name like #{name})
			</if>
		</where>
	</select>
</mapper>
